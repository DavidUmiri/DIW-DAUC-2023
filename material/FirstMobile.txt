<meta name="viewport" content="width=device-width, initial-scale=1.0">

@media only screen and (max-width: 600px){ body{ background-color:lightblue; } }

¿Que tipo de consulta realizar? 
• width | min-width | max-width 
• height | min-height | max-height 
• orientation (landscape / portrait) 
• aspect-ratio | min-aspect-ratio | max-aspect-ratio 
• color | min-color | max-color

¿Puedo usar condiciones? 
• and 
• or 
• not 
• all 
• only 

¿Que puntos de ruptura utilizar?
• Pantallas extra-pequeñas  → Teléfonos, 600px y inferior 
@media only screen and (max-width: 600px) {…} 	

• Pantallas pequeñas  →  Tablets y Teléfonos grandes, 600px and superior 
@media only screen and (min-width: 600px) {…} 

• Pantallas medias → landscape tablets, 768px and superior 
@media only screen and (min-width: 768px) {…} 

• Pantallas grandes → portátiles/Escritorio, 992px and superior 
@media only screen and (min-width: 992px) {…} 

• Pantallas extra grandes → Portátiles y escritorio grandes, 1200px and up 
@media only screen and (min-width: 1200px) {...}

Hojas de estilo diferentes Otra alternativa es utilizar hojas de estilo diferentes para cada tipo de tamaño (punto de ruptura)
<link rel="stylesheet" media="(max-width: 576px)" href="small.css" />
<link rel="stylesheet" media="(max-width: 768px)" href="medium.css" />
<link rel="stylesheet" media="(max-width: 992px)" href="large.css" />


Alinear vertical y horizontalmente a un hijo:
display:flex;
justify-content: center;
align-items: center;

Orientación horizontal: 
@media only screen and (orientation: landscape){}

// clase
no usar px, usar %

grid view --> estructura en columnas
escritorio: 12 columnas
tablet: 8 columnas
móvil: 4 columnas

imagen y video asociado al tema
para imagenes --> max-height, asociado a un contenedor y que se ajuste

footer --> el que hicimos con flexbox, iconos con redes sociales
